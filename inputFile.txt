# The MIT License (MIT)

# Copyright (c) 2015-2016 European Synchrotron Radiation Facility

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Input file format for LASDiA software.
# The lines with the hash tag (#) are commented.

# Path sample and bkg file
data_file = "../data/cea_files/CO2/WO2_007T++.chi"
bkg_file = "../data/cea_files/CO2/WO2_013T++.chi"
# data_file = "../data/cea_files/Ar/HT2_034T++_rem.chi"
# bkg_file = "../data/cea_files/Ar/HT2_036T++_rem.chi"

# Sample composition
molecule = "CO2"                                                # Molecular composition: Ar, CO2, N2
element_params = "./elementParameters.txt"                      # Path element parameters file

# Geometry corrections
abs_length = 1.208                                              # @33keV 1.208cm
dac_thickness = 0.144                                           # cm
phi_matrix_thickness = 0.17                                     # cm
phi_matrix_flag = "n"                                           # flag for the phi matrix calculation
MCC_path = "./SollerSlits.txt"
MCC_type = "A"

# Analysis parameters
minQ = 8.005 # 3.0                                                    # Minimum Q value in data interpolation waves
QmaxIntegrate = 90.0 #98.0                                              # Qmax for all integration operations
maxQ = 100.0 #109.0                                                      # Maximum Q value in data interpolation waves

# NumPoints = 550                                                 # Number of points for S(Q) smoothing
smooth_factor = 0.25                                            # Smoothing factor for cubic spline
damping_factor = 1                                                 # Exponential damping factor == A*Qmax^2

# F(r) optimization
plot_iter = "n"                                            # flag to plot the F(r) iterations
iteration = 2                                                   # Number of iteration for F(r) optimization
rmin = 0.22                                                     # The distance below which no peaks in F(r) may occur

# Scale factor and density parameters
sf_value = 0.8379 #0.98                                                  # Scale factor initial value
rho0_value = 25.4072222222 #29                                                 # Sample density initial value
sf_loop = "n"                                                  # flag for the loop
rho0_loop = "n"                                                  # flag for the loop




# Ploting/Writing variables: [Plot (Y/n), Write (Y/n), Path]
# pw_raw_data = ["n"]                                             # Plot the Raw Data

# pw_S_Q = ["n", "n", "./test/SQ.txt"]                            # Plot and save the S(Q)
# pw_F_r = ["n", "N", "./test/Fr.txt"]                            # Plot and save F(r)

# pw_F_r_iter = ["n"]                                             # Plot the iterations for the F(r) optimization

# pw_chi2 = ["y"]                                                 # Plot Chi2 graphs

# pw_F_rOpt = ["n", "N", "./test/FrOpt.txt"]                      # Plot and save the optimal F(r) with the best scale factor and rho0 density
# pw_S_QCorr = ["n", "N", "./test/SQCorr.txt"]                    # Plot and save the S(Q) corrected

# pw_results = ["n", "./results.txt"]                             # Save the scale factor and rho0 density on file otherwise print them
